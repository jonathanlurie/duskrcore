{"version":3,"file":"duskrcore.js","sources":["../src/AdobeXmp.js","../src/index.js"],"sourcesContent":["import XmlParser from 'xml-js'\n\nclass AdobeXmp {\n\n  /**\n   * Val is a string, but it can represent a number, a boolean or a string.\n   * This function converts val into the most appropriate type.\n   * @param  {string} val - a value\n   * @return {string|number|boolean}\n   */\n  static convertToRelevantType(val){\n    let cleanVal = val.trim()\n    // boolean: true\n    if(cleanVal === 'True' || cleanVal === 'true' || cleanVal === 'TRUE')\n      return true\n\n    // boolean: false\n    if(cleanVal === 'False' || cleanVal === 'false' || cleanVal === 'FALSE')\n      return false\n\n    // a number\n    if(parseFloat(cleanVal) !== NaN)\n      return parseFloat(cleanVal)\n\n    // a string\n    return cleanVal\n  }\n\n\n  static convertToString(val){\n    if(val === true)\n      return 'True'\n\n    if(val === false)\n      return 'False'\n\n    if(typeof val === 'number')\n      return val.toString()\n\n    return val.trim()\n  }\n\n\n\n  constructor(){\n    this._xmlPayload = null\n    this._objectRepresentation = null\n  }\n\n\n  setXmlPayload(xmlStr){\n    this._xmlPayload = xmlStr\n    let jsonPayload = XmlParser.xml2json(xmlStr, {compact: true})\n    this._objectRepresentation = JSON.parse(jsonPayload)\n  }\n\n\n  getXml(){\n    return XmlParser.json2xml(JSON.stringify(this._objectRepresentation), {compact: true, ignoreComment: true, spaces: 4})\n  }\n\n\n  _getBasicAttributesObject(){\n    return this._objectRepresentation['x:xmpmeta']['rdf:RDF']['rdf:Description']['_attributes']\n  }\n\n\n  hasSettings(){\n    let ba = this._getBasicAttributesObject()\n    return ba['crs:HasSettings'] === 'True'\n  }\n\n\n  getRawFileName(){\n    let ba = this._getBasicAttributesObject()\n    return ba['crs:RawFileName']\n  }\n\n\n  setRawFileName(name){\n    let ba = this._getBasicAttributesObject()\n    ba['crs:RawFileName'] = name\n  }\n\n\n  getSettingAttribute(attrName){\n    let ba = this._getBasicAttributesObject()\n    if(`crs:${attrName}` in ba){\n      return AdobeXmp.convertToRelevantType(ba[`crs:${attrName}`])\n    }else{\n      return null\n    }\n  }\n\n\n  setSettingAttribute(attrName, value){\n    let ba = this._getBasicAttributesObject()\n    ba[`crs:${attrName}`] = AdobeXmp.convertToString(value)\n  }\n\n}\n\nexport default AdobeXmp\n","import AdobeXmp from './AdobeXmp'\n\nexport default { AdobeXmp }\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,QAAQ,CAAC;;;;;;;;EAQb,OAAO,qBAAqB,CAAC,GAAG,CAAC;IAC/B,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,GAAE;;IAEzB,GAAG,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM;MAClE,OAAO,IAAI;;;IAGb,GAAG,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,OAAO;MACrE,OAAO,KAAK;;;IAGd,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,GAAG;MAC7B,OAAO,UAAU,CAAC,QAAQ,CAAC;;;IAG7B,OAAO,QAAQ;GAChB;;;EAGD,OAAO,eAAe,CAAC,GAAG,CAAC;IACzB,GAAG,GAAG,KAAK,IAAI;MACb,OAAO,MAAM;;IAEf,GAAG,GAAG,KAAK,KAAK;MACd,OAAO,OAAO;;IAEhB,GAAG,OAAO,GAAG,KAAK,QAAQ;MACxB,OAAO,GAAG,CAAC,QAAQ,EAAE;;IAEvB,OAAO,GAAG,CAAC,IAAI,EAAE;GAClB;;;;EAID,WAAW,EAAE;IACX,IAAI,CAAC,WAAW,GAAG,KAAI;IACvB,IAAI,CAAC,qBAAqB,GAAG,KAAI;GAClC;;;EAGD,aAAa,CAAC,MAAM,CAAC;IACnB,IAAI,CAAC,WAAW,GAAG,OAAM;IACzB,IAAI,WAAW,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,EAAC;IAC7D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAC;GACrD;;;EAGD,MAAM,EAAE;IACN,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;GACvH;;;EAGD,yBAAyB,EAAE;IACzB,OAAO,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC;GAC5F;;;EAGD,WAAW,EAAE;IACX,IAAI,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAE;IACzC,OAAO,EAAE,CAAC,iBAAiB,CAAC,KAAK,MAAM;GACxC;;;EAGD,cAAc,EAAE;IACd,IAAI,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAE;IACzC,OAAO,EAAE,CAAC,iBAAiB,CAAC;GAC7B;;;EAGD,cAAc,CAAC,IAAI,CAAC;IAClB,IAAI,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAE;IACzC,EAAE,CAAC,iBAAiB,CAAC,GAAG,KAAI;GAC7B;;;EAGD,mBAAmB,CAAC,QAAQ,CAAC;IAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAE;IACzC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;MACzB,OAAO,QAAQ,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC7D,IAAI;MACH,OAAO,IAAI;KACZ;GACF;;;EAGD,mBAAmB,CAAC,QAAQ,EAAE,KAAK,CAAC;IAClC,IAAI,EAAE,GAAG,IAAI,CAAC,yBAAyB,GAAE;IACzC,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,EAAC;GACxD;;CAEF;;AClGD,YAAe,EAAE,QAAQ,EAAE;;;;"}